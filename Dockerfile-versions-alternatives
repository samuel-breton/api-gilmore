# ===========================================
# 1. VERSION DE DÉVELOPPEMENT
# ===========================================
FROM node:22-alpine AS development

WORKDIR /app
COPY package*.json ./
RUN npm ci
COPY . .

# Outils de développement inclus
RUN npm install -g nodemon

EXPOSE 3000
CMD ["npm", "run", "dev"]

# ===========================================
# 2. VERSION BLEEDING-EDGE (Node.js Current)
# ===========================================
FROM node:current-alpine AS bleeding-edge

# Pour tester les dernières fonctionnalités
# ⚠️  Pas pour la production
WORKDIR /app
COPY package*.json ./
RUN npm ci
COPY . .

EXPOSE 3000
CMD ["node", "--experimental-modules", "index.js"]

# ===========================================
# 3. VERSION MULTI-STAGE ULTRA-OPTIMISÉE
# ===========================================
# Stage 1: Build
FROM node:22-alpine AS builder

WORKDIR /app
COPY package*.json ./
RUN npm ci

COPY . .
RUN npm run build && \
    npm prune --omit=dev

# Stage 2: Production
FROM node:22-alpine AS production

RUN apk add --no-cache dumb-init && \
    addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

WORKDIR /app
USER nextjs

# Copie seulement les fichiers nécessaires du stage builder
COPY --from=builder --chown=nextjs:nodejs /app/dist ./dist
COPY --from=builder --chown=nextjs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nextjs:nodejs /app/package.json ./

EXPOSE 3000
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/index.js"]

# ===========================================
# 4. VERSION AVEC DEBUGGING INTÉGRÉ
# ===========================================
FROM node:22-alpine AS debug

WORKDIR /app
COPY package*.json ./
RUN npm ci

COPY . .

# Configure pour debugging à distance
EXPOSE 3000 9229
CMD ["node", "--inspect=0.0.0.0:9229", "index.js"]